"""
–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
–ó–∞–ø—É—Å–∫–∞—Ç—å: python manage.py fix_images
"""

from django.core.management.base import BaseCommand
import os
import shutil
from pathlib import Path

class Command(BaseCommand):
    help = '–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏'

    def handle(self, *args, **options):
        self.stdout.write('üñºÔ∏è –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏...')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        self.fix_missing_images()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É—Ç–∏ –≤ —à–∞–±–ª–æ–Ω–µ
        self.check_template_paths()
        
        self.stdout.write(self.style.SUCCESS('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞!'))

    def fix_missing_images(self):
        """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        self.stdout.write('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...')
        
        # –°–ø–∏—Å–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å
        required_images = [
            'media/portfolio/portfl8.jpg',  # –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!
        ]
        
        for image_path in required_images:
            if not os.path.exists(image_path):
                self.stdout.write(f'  ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: {image_path}')
                
                # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                if 'portfl8.jpg' in image_path:
                    source = 'media/portfolio/portfl1.jpg'
                    if os.path.exists(source):
                        shutil.copy2(source, image_path)
                        self.stdout.write(f'  ‚úÖ –°–æ–∑–¥–∞–Ω: {image_path} (–∫–æ–ø–∏—è {source})')
                    else:
                        self.stdout.write(f'  ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å: {image_path}')
            else:
                self.stdout.write(f'  ‚úÖ –°—É—â–µ—Å—Ç–≤—É–µ—Ç: {image_path}')

    def check_template_paths(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—É—Ç–∏ –≤ —à–∞–±–ª–æ–Ω–µ"""
        self.stdout.write('üìù –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É—Ç–∏ –≤ —à–∞–±–ª–æ–Ω–µ...')
        
        template_path = 'main/templates/main/index.html'
        if os.path.exists(template_path):
            with open(template_path, 'r', encoding='utf-8') as f:
                content = f.read()
            
            # –ò—â–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –ø—É—Ç–∏
            problematic_paths = [
                '/media/portfolio/portfl8.jpg',  # –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
            ]
            
            for path in problematic_paths:
                if path in content:
                    self.stdout.write(f'  ‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–Ω—ã–π –ø—É—Ç—å –≤ —à–∞–±–ª–æ–Ω–µ: {path}')
                else:
                    self.stdout.write(f'  ‚úÖ –ü—É—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —à–∞–±–ª–æ–Ω–µ: {path}')
        else:
            self.stdout.write('  ‚ùå –®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω!')


