"""
–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å SSL
–ó–∞–ø—É—Å–∫–∞—Ç—å: python manage.py check_ssl
"""

from django.core.management.base import BaseCommand
from django.conf import settings
import os
import re
from pathlib import Path

class Command(BaseCommand):
    help = '–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞ —Å SSL'

    def handle(self, *args, **options):
        self.stdout.write('üîí –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å SSL...')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django
        self.check_django_settings()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–∞–±–ª–æ–Ω—ã
        self.check_templates()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
        self.check_static_files()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º JavaScript
        self.check_javascript()
        
        self.stdout.write(self.style.SUCCESS('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL –∑–∞–≤–µ—Ä—à–µ–Ω–∞!'))

    def check_django_settings(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django –¥–ª—è SSL"""
        self.stdout.write('‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django...')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        security_settings = [
            ('SECURE_HSTS_SECONDS', 'HSTS –≤–∫–ª—é—á–µ–Ω'),
            ('SECURE_HSTS_INCLUDE_SUBDOMAINS', 'HSTS –¥–ª—è –ø–æ–¥–¥–æ–º–µ–Ω–æ–≤'),
            ('SECURE_HSTS_PRELOAD', 'HSTS preload'),
            ('SECURE_BROWSER_XSS_FILTER', 'XSS –∑–∞—â–∏—Ç–∞'),
            ('SECURE_CONTENT_TYPE_NOSNIFF', 'MIME sniffing –∑–∞—â–∏—Ç–∞'),
            ('X_FRAME_OPTIONS', 'Clickjacking –∑–∞—â–∏—Ç–∞'),
        ]
        
        for setting, description in security_settings:
            if hasattr(settings, setting):
                value = getattr(settings, setting)
                if value:
                    self.stdout.write(f'  ‚úÖ {setting}: {description}')
                else:
                    self.stdout.write(f'  ‚ö†Ô∏è {setting}: {description} - –æ—Ç–∫–ª—é—á–µ–Ω–æ')
            else:
                self.stdout.write(f'  ‚ùå {setting}: {description} - –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º SSL –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        ssl_settings = [
            ('SECURE_SSL_REDIRECT', 'SSL —Ä–µ–¥–∏—Ä–µ–∫—Ç'),
            ('SESSION_COOKIE_SECURE', '–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Å–µ—Å—Å–∏–∏'),
            ('CSRF_COOKIE_SECURE', '–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ CSRF'),
        ]
        
        for setting, description in ssl_settings:
            if hasattr(settings, setting):
                value = getattr(settings, setting)
                if value:
                    self.stdout.write(f'  ‚úÖ {setting}: {description} - –≤–∫–ª—é—á–µ–Ω–æ')
                else:
                    self.stdout.write(f'  ‚ö†Ô∏è {setting}: {description} - –æ—Ç–∫–ª—é—á–µ–Ω–æ (–Ω—É–∂–Ω–æ –¥–ª—è SSL)')
            else:
                self.stdout.write(f'  ‚ö†Ô∏è {setting}: {description} - –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ (–Ω—É–∂–Ω–æ –¥–ª—è SSL)')

    def check_templates(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —à–∞–±–ª–æ–Ω—ã –Ω–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å SSL"""
        self.stdout.write('üìù –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–∞–±–ª–æ–Ω—ã...')
        
        template_path = 'main/templates/main/index.html'
        if os.path.exists(template_path):
            with open(template_path, 'r', encoding='utf-8') as f:
                content = f.read()
            
            # –ò—â–µ–º HTTP —Å—Å—ã–ª–∫–∏
            http_links = re.findall(r'href="(http://[^"]*)"', content)
            http_srcs = re.findall(r'src="(http://[^"]*)"', content)
            
            if http_links:
                self.stdout.write(f'  ‚ùå –ù–∞–π–¥–µ–Ω—ã HTTP —Å—Å—ã–ª–∫–∏: {len(http_links)}')
                for link in http_links:
                    self.stdout.write(f'    - {link}')
            else:
                self.stdout.write('  ‚úÖ HTTP —Å—Å—ã–ª–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
            
            if http_srcs:
                self.stdout.write(f'  ‚ùå –ù–∞–π–¥–µ–Ω—ã HTTP src: {len(http_srcs)}')
                for src in http_srcs:
                    self.stdout.write(f'    - {src}')
            else:
                self.stdout.write('  ‚úÖ HTTP src –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º HTTPS —Å—Å—ã–ª–∫–∏
            https_links = re.findall(r'href="(https://[^"]*)"', content)
            if https_links:
                self.stdout.write(f'  ‚úÖ HTTPS —Å—Å—ã–ª–∫–∏: {len(https_links)}')
        else:
            self.stdout.write('  ‚ùå –®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω!')

    def check_static_files(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã"""
        self.stdout.write('üìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã...')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º WhiteNoise
        if 'whitenoise.middleware.WhiteNoiseMiddleware' in settings.MIDDLEWARE:
            self.stdout.write('  ‚úÖ WhiteNoise –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
        else:
            self.stdout.write('  ‚ö†Ô∏è WhiteNoise –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º STATICFILES_STORAGE
        if hasattr(settings, 'STATICFILES_STORAGE'):
            storage = settings.STATICFILES_STORAGE
            if 'whitenoise' in storage.lower():
                self.stdout.write('  ‚úÖ WhiteNoise storage –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
            else:
                self.stdout.write('  ‚ö†Ô∏è WhiteNoise storage –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')

    def check_javascript(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç JavaScript —Ñ–∞–π–ª—ã"""
        self.stdout.write('üìú –ü—Ä–æ–≤–µ—Ä—è–µ–º JavaScript...')
        
        js_files = [
            'static/js/main.js',
            'static/js/hero-responsive.js',
        ]
        
        for js_file in js_files:
            if os.path.exists(js_file):
                with open(js_file, 'r', encoding='utf-8') as f:
                    content = f.read()
                
                # –ò—â–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
                http_patterns = re.findall(r'http://', content)
                location_patterns = re.findall(r'location\.href\s*=', content)
                
                if http_patterns:
                    self.stdout.write(f'  ‚ö†Ô∏è {js_file}: –Ω–∞–π–¥–µ–Ω—ã HTTP —Å—Å—ã–ª–∫–∏')
                else:
                    self.stdout.write(f'  ‚úÖ {js_file}: HTTP —Å—Å—ã–ª–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
                
                if location_patterns:
                    self.stdout.write(f'  ‚ÑπÔ∏è {js_file}: –Ω–∞–π–¥–µ–Ω—ã location.href (–ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Ä—É—á–Ω—É—é)')
            else:
                self.stdout.write(f'  ‚ùå {js_file}: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω')


