"""
–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –Ω–µ–Ω—É–∂–Ω—ã—Ö –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
–ó–∞–ø—É—Å–∫–∞—Ç—å: python manage.py cleanup_media
"""

from django.core.management.base import BaseCommand
import os
from pathlib import Path

class Command(BaseCommand):
    help = '–£–¥–∞–ª—è–µ—Ç –Ω–µ–Ω—É–∂–Ω—ã–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã'

    def handle(self, *args, **options):
        self.stdout.write('üßπ –û—á–∏—â–∞–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã...')
        
        # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
        files_to_delete = [
            'media/services/reverse_engineering_KFJWLVI.jpg',
            'media/portfolio/–°–Ω–∏–º–æ–∫_—ç–∫—Ä–∞–Ω–∞_2025-09-13_093954.png'
        ]
        
        total_saved = 0
        
        for file_path in files_to_delete:
            if os.path.exists(file_path):
                # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
                file_size = os.path.getsize(file_path)
                total_saved += file_size
                
                # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª
                os.remove(file_path)
                
                self.stdout.write(f'  ‚úÖ –£–¥–∞–ª–µ–Ω: {file_path} ({file_size:,} –±–∞–π—Ç)')
            else:
                self.stdout.write(f'  ‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}')
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –±–∞–π—Ç—ã –≤ KB/MB
        if total_saved > 1024 * 1024:
            saved_str = f'{total_saved / (1024 * 1024):.1f} MB'
        elif total_saved > 1024:
            saved_str = f'{total_saved / 1024:.1f} KB'
        else:
            saved_str = f'{total_saved} –±–∞–π—Ç'
        
        self.stdout.write(self.style.SUCCESS(f'‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –°—ç–∫–æ–Ω–æ–º–ª–µ–Ω–æ: {saved_str}'))


