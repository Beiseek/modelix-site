"""
–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –∞–¥–º–∏–Ω–∫–∏
–ó–∞–ø—É—Å–∫–∞—Ç—å: python manage.py check_admin
"""

from django.core.management.base import BaseCommand
from django.contrib.admin.sites import site
from django.contrib.auth.models import User
from main.models import *

class Command(BaseCommand):
    help = '–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∞–¥–º–∏–Ω–∫–∏ Django'

    def handle(self, *args, **options):
        self.stdout.write('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∞–¥–º–∏–Ω–∫–∏...')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –º–æ–¥–µ–ª–µ–π
        self.check_model_registration()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ
        self.check_database_data()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
        self.check_permissions()
        
        self.stdout.write(self.style.SUCCESS('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!'))

    def check_model_registration(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –º–æ–¥–µ–ª–µ–π –≤ –∞–¥–º–∏–Ω–∫–µ"""
        self.stdout.write('üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –º–æ–¥–µ–ª–µ–π –≤ –∞–¥–º–∏–Ω–∫–µ...')
        
        # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π
        models_to_check = [
            ('PrintOrder', '–ó–∞—è–≤–∫–∏ –Ω–∞ –ø–µ—á–∞—Ç—å'),
            ('CallRequest', '–ó–∞—è–≤–∫–∏ –Ω–∞ –∑–≤–æ–Ω–æ–∫'),
            ('PortfolioItem', '–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ'),
            ('Service', '–£—Å–ª—É–≥–∏'),
            ('SocialLink', '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏'),
            ('ContactInfo', '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'),
            ('FAQ', '–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã'),
        ]
        
        registered_models = [model.__name__ for model in site._registry.keys()]
        
        for model_name, description in models_to_check:
            if model_name in registered_models:
                self.stdout.write(f'  ‚úÖ {model_name} - {description}')
            else:
                self.stdout.write(f'  ‚ùå {model_name} - {description} - –ù–ï –ó–ê–†–ï–ì–ò–°–¢–†–ò–†–û–í–ê–ù!')

    def check_database_data(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ"""
        self.stdout.write('üóÑÔ∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ...')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
        data_checks = [
            (Service, '–£—Å–ª—É–≥–∏', 6),
            (PortfolioItem, '–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ', 8),
            (FAQ, 'FAQ', 6),
            (SocialLink, '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏', 4),
            (ContactInfo, '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', 1),
        ]
        
        for model, name, expected_count in data_checks:
            count = model.objects.count()
            if count >= expected_count:
                self.stdout.write(f'  ‚úÖ {name}: {count} –∑–∞–ø–∏—Å–µ–π')
            else:
                self.stdout.write(f'  ‚ö†Ô∏è {name}: {count} –∑–∞–ø–∏—Å–µ–π (–æ–∂–∏–¥–∞–ª–æ—Å—å {expected_count})')

    def check_permissions(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞"""
        self.stdout.write('üîê –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞...')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        superusers = User.objects.filter(is_superuser=True)
        if superusers.exists():
            self.stdout.write(f'  ‚úÖ –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {superusers.count()} —à—Ç—É–∫')
            for user in superusers:
                self.stdout.write(f'    - {user.username} ({user.email})')
        else:
            self.stdout.write('  ‚ùå –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        regular_users = User.objects.filter(is_superuser=False)
        if regular_users.exists():
            self.stdout.write(f'  ‚ÑπÔ∏è –û–±—ã—á–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {regular_users.count()} —à—Ç—É–∫')


